
import java.awt.Color;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author fb dz
 */
public class PROPERTY_WINDOW extends javax.swing.JFrame {

    /**
     * Creates new form PROPERTY_WINDOW
     */
    
    
     P_TYPE type = new P_TYPE();
     HashMap<String, Integer> map = type.getTypesMap();
    public PROPERTY_WINDOW() {
        initComponents();
          
        Border panel_title_border = BorderFactory.createMatteBorder(0,0,3,0, new Color(255,153,102));
        jLabel1.setBorder(panel_title_border );
        
        // set border to the button 
        Border button_border =BorderFactory.createMatteBorder(3,3,3,3,new Color(255,255,255));
        jButton_Add_Property.setBorder(button_border);
        jButton_Edit_Property.setBorder(button_border);
  
        jButton_Remove_Property.setBorder(button_border);
       bindCombo();
        
    }
     public void bindCombo(){
        
         for (String s : map.keySet()){
           jComboBox_Type.addItem("Residential");
        jComboBox_Type.addItem("Commercial");
        jComboBox_Type.addItem("Industrial");
        jComboBox_Type.addItem("Land");
            
         }
         
     }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField_Id = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_Description = new javax.swing.JTextArea();
        jButton_Edit_Property = new javax.swing.JButton();
        jButton_Add_Property = new javax.swing.JButton();
        jTextField_Price = new javax.swing.JTextField();
        jTextField_OwnerId = new javax.swing.JTextField();
        jTextField_SquareFeet = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton_Search_Property = new javax.swing.JButton();
        jComboBox_Type = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jSpinner_Bedrooms = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jSpinner_bathrooms = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        jSpinner_Age = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea_Adresse = new javax.swing.JTextArea();
        jCheckBox_Backyard = new javax.swing.JCheckBox();
        jCheckBox_Garage = new javax.swing.JCheckBox();
        jCheckBox_Balcony = new javax.swing.JCheckBox();
        jCheckBox_Pool = new javax.swing.JCheckBox();
        jButton_Remove_Property = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(0, 153, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(153, 153, 255)));

        jLabel1.setBackground(new java.awt.Color(0, 153, 0));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText(" Property ");

        jPanel1.setBackground(new java.awt.Color(0, 204, 0));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("Type:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setText("     Adresse:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel4.setText("   ID:");

        jTextField_Id.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_Id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_IdActionPerformed(evt);
            }
        });

        jTextArea_Description.setColumns(20);
        jTextArea_Description.setFont(new java.awt.Font("Mongolian Baiti", 0, 18)); // NOI18N
        jTextArea_Description.setRows(5);
        jScrollPane1.setViewportView(jTextArea_Description);

        jButton_Edit_Property.setBackground(new java.awt.Color(0, 204, 255));
        jButton_Edit_Property.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_Edit_Property.setText("Edit");
        jButton_Edit_Property.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Edit_PropertyActionPerformed(evt);
            }
        });

        jButton_Add_Property.setBackground(new java.awt.Color(51, 255, 51));
        jButton_Add_Property.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_Add_Property.setText("Add");
        jButton_Add_Property.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Add_PropertyActionPerformed(evt);
            }
        });

        jTextField_Price.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_Price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_PriceActionPerformed(evt);
            }
        });

        jTextField_OwnerId.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_OwnerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_OwnerIdActionPerformed(evt);
            }
        });

        jTextField_SquareFeet.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_SquareFeet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_SquareFeetActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel5.setText("Owner Id :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel6.setText("Price:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel7.setText("Square Feet:");

        jButton_Search_Property.setBackground(new java.awt.Color(51, 51, 51));
        jButton_Search_Property.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton_Search_Property.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Search_Property.setText("Search");
        jButton_Search_Property.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Search_Property.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Search_PropertyActionPerformed(evt);
            }
        });

        jComboBox_Type.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jComboBox_Type.setSelectedItem(getType());
        jComboBox_Type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_TypeActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel8.setText(" Bedrooms:");

        jSpinner_Bedrooms.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel9.setText("Description/Comment:");

        jSpinner_bathrooms.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel10.setText("Age Of The House:");

        jSpinner_Age.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("*0 mean brand new");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel12.setText(" Bathrooms:");

        jTextArea_Adresse.setColumns(20);
        jTextArea_Adresse.setFont(new java.awt.Font("Mongolian Baiti", 0, 18)); // NOI18N
        jTextArea_Adresse.setRows(5);
        jScrollPane2.setViewportView(jTextArea_Adresse);

        jCheckBox_Backyard.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jCheckBox_Backyard.setText("Backyard");
        jCheckBox_Backyard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_BackyardActionPerformed(evt);
            }
        });

        jCheckBox_Garage.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jCheckBox_Garage.setText("Garage");
        jCheckBox_Garage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_GarageActionPerformed(evt);
            }
        });

        jCheckBox_Balcony.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jCheckBox_Balcony.setText("Balcony");
        jCheckBox_Balcony.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_BalconyActionPerformed(evt);
            }
        });

        jCheckBox_Pool.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jCheckBox_Pool.setText("Pool");
        jCheckBox_Pool.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_PoolActionPerformed(evt);
            }
        });

        jButton_Remove_Property.setBackground(new java.awt.Color(255, 51, 51));
        jButton_Remove_Property.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_Remove_Property.setText("Remove");
        jButton_Remove_Property.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Remove_PropertyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(8, 8, 8))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(21, 21, 21))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField_OwnerId, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_Price, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_SquareFeet, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_Search_Property, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jComboBox_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Add_Property, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(jLabel10))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jSpinner_Age, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jSpinner_Bedrooms, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(18, 18, 18)
                                        .addComponent(jSpinner_bathrooms, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox_Backyard, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox_Garage, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox_Balcony, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox_Pool, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(684, 684, 684))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton_Edit_Property, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton_Remove_Property, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_Search_Property, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jComboBox_Type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_SquareFeet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_OwnerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jLabel3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(182, 182, 182)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(jSpinner_bathrooms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jSpinner_Age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(136, 136, 136)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(jSpinner_Bedrooms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCheckBox_Balcony))
                                .addGap(18, 18, 18)
                                .addComponent(jCheckBox_Pool)
                                .addGap(18, 18, 18)
                                .addComponent(jCheckBox_Backyard)
                                .addGap(18, 18, 18)
                                .addComponent(jCheckBox_Garage)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Remove_Property, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Edit_Property, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Add_Property, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 942, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(382, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(411, 411, 411))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_IdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_IdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_IdActionPerformed

    private void jButton_Edit_PropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Edit_PropertyActionPerformed
    
    try {
       
        int id = Integer.valueOf(jTextField_Id.getText());
        if (id <= 0) {
            JOptionPane.showMessageDialog(null, "Enter a valid property ID", "Invalid ID", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int type = map.getOrDefault(jComboBox_Type.getSelectedItem().toString(), 0);
        int OwnerId = Integer.valueOf(jTextField_OwnerId.getText());
        int squareFeet = Integer.valueOf(jTextField_SquareFeet.getText());
        int bedrooms = (Integer) jSpinner_Bedrooms.getValue();
        int bathrooms = (Integer) jSpinner_bathrooms.getValue();
        int age = (Integer) jSpinner_Age.getValue();
        boolean haveBalcony = jCheckBox_Balcony.isSelected();
        boolean havePool = jCheckBox_Pool.isSelected();
        boolean haveBackyard = jCheckBox_Backyard.isSelected();
        boolean haveGarage = jCheckBox_Garage.isSelected();
        String price = jTextField_Price.getText();
        String address = jTextArea_Adresse.getText();
        String description = jTextArea_Description.getText();

        P_PROPERTY property = new P_PROPERTY(id, type, squareFeet, OwnerId, price, address, bedrooms, bathrooms, age, haveBalcony, havePool, haveBackyard, haveGarage, description);

        if (new P_PROPERTY().editProperty(property)) {
            JOptionPane.showMessageDialog(null, "Property data updated", "Edit property", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Failed to update property data", "Edit property", JOptionPane.ERROR_MESSAGE);
        }
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(null, "Enter valid numeric values for Owner ID, Square Feet, Bedrooms, Bathrooms, and Age", "Invalid data", JOptionPane.ERROR_MESSAGE);
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(null, "An error occurred: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace(); // Print stack trace for debugging
    }


    }//GEN-LAST:event_jButton_Edit_PropertyActionPerformed

    private void jButton_Add_PropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Add_PropertyActionPerformed
                                                   
    try { 
        // Get the selected type from the map
        int type = map.get(jComboBox_Type.getSelectedItem().toString());
        
        // Retrieve the input values
        int ownerId = Integer.parseInt(jTextField_OwnerId.getText());
        int squareFeet = Integer.parseInt(jTextField_SquareFeet.getText());
        int bedrooms = Integer.parseInt(jSpinner_Bedrooms.getValue().toString());
        int bathrooms = Integer.parseInt(jSpinner_bathrooms.getValue().toString());
        int age = Integer.parseInt(jSpinner_Age.getValue().toString());

        boolean haveBalcony = jCheckBox_Balcony.isSelected();
        boolean havePool = jCheckBox_Pool.isSelected();
        boolean haveBackyard = jCheckBox_Backyard.isSelected();
        boolean haveGarage = jCheckBox_Garage.isSelected();

        String price = jTextField_Price.getText();
        String address = jTextArea_Adresse.getText();
        String description = jTextArea_Description.getText();
        
        // Create a new P_PROPERTY object
        P_PROPERTY property = new P_PROPERTY(0, type, squareFeet, ownerId, price, address, bedrooms, bathrooms, age, haveBalcony, havePool, haveBackyard, haveGarage, description);

        // Attempt to add the new property
        if (new P_PROPERTY().addNewProperty(property)) {
            JOptionPane.showMessageDialog(null, "New property added to the system", "Add Property", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Property not added to the system", "Add Property", JOptionPane.ERROR_MESSAGE);
        }

    } catch (Exception ex) {
        JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace(); // Print stack trace to console for debugging
    }

    }//GEN-LAST:event_jButton_Add_PropertyActionPerformed
  
  

    private void jTextField_PriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_PriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_PriceActionPerformed

    private void jTextField_OwnerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_OwnerIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_OwnerIdActionPerformed

    private void jTextField_SquareFeetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_SquareFeetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_SquareFeetActionPerformed

    private void jCheckBox_BackyardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_BackyardActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_BackyardActionPerformed

    private void jCheckBox_GarageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_GarageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_GarageActionPerformed

    private void jCheckBox_BalconyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_BalconyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_BalconyActionPerformed

    private void jCheckBox_PoolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_PoolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_PoolActionPerformed

    private void jButton_Remove_PropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Remove_PropertyActionPerformed
        // TODO add your handling code here:
        
        
        try {

            int id = Integer.valueOf(jTextField_Id.getText());

            P_PROPERTY property = new  P_PROPERTY();
            if(jTextField_Id.getText().trim().equals(""))
            {
                JOptionPane.showMessageDialog(null,"Enter the property ID","Empty ID ",2);
            }
            else{
                //show the confermation message before deleting the client
                int yes_or_no =JOptionPane.showConfirmDialog(null,"Do you want to delete this property","delete property",JOptionPane.WARNING_MESSAGE);
                if(yes_or_no ==JOptionPane.YES_OPTION )
                {
                    if( property.removeProperty(id))
                    {
                        JOptionPane.showMessageDialog(null,"property data Deleted","Delete property ",1);
                    
                    jTextField_Id.setText("");
                    jTextArea_Adresse.setText(""); 
                jTextArea_Description.setText("");
                jTextField_Price.setText("");
                jTextField_SquareFeet.setText("");
                jTextField_OwnerId.setText("");
                jComboBox_Type.setSelectedIndex(0);
 
                jSpinner_Bedrooms.setValue(0);
                jSpinner_bathrooms.setValue(0);
                jSpinner_Age.setValue(0);
                
                 jCheckBox_Balcony.setSelected(false);
                 jCheckBox_Backyard.setSelected(false);
                 jCheckBox_Pool.setSelected(false);
                 jCheckBox_Garage.setSelected(false);
                
                    
                    
                    }
                    
                   
                    else{
                        JOptionPane.showMessageDialog(null,"Operation Failed","Delete property ",2);
                    }
                }
            }

        }catch (Exception ex)
        {
            JOptionPane.showMessageDialog(null,ex.getMessage()+"Enter a Valid owner ID","Invalid Id" ,0);
        }

        
        
        
        
    }//GEN-LAST:event_jButton_Remove_PropertyActionPerformed

    private void jButton_Search_PropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Search_PropertyActionPerformed
        try {
        int propertyId = Integer.parseInt(jTextField_Id.getText());
        System.out.println("Searching for property with ID: " + propertyId); // Debug information

        P_PROPERTY property = new P_PROPERTY().findProperty(propertyId);

        if (property != null) {
            System.out.println("Property found: " + property); // Debug information

            // Clear previous selections
            jTextArea_Adresse.setText(""); 
            jTextArea_Description.setText("");
            jTextField_Price.setText("");
            jTextField_SquareFeet.setText("");
            jTextField_OwnerId.setText("");
            jComboBox_Type.setSelectedItem(null);
            jSpinner_Bedrooms.setValue(0);
            jSpinner_bathrooms.setValue(0);
            jSpinner_Age.setValue(0);
            jCheckBox_Balcony.setSelected(false);
            jCheckBox_Backyard.setSelected(false);
            jCheckBox_Pool.setSelected(false);
            jCheckBox_Garage.setSelected(false);

            // Set new values from the found property
            jTextArea_Adresse.setText(property.getAddress());
            jTextArea_Description.setText(property.getDescription());
            jTextField_Price.setText(property.getPrice());
            jTextField_SquareFeet.setText(String.valueOf(property.getSize()));
            jTextField_OwnerId.setText(String.valueOf(property.getOwnerId()));

            for (String type : map.keySet()) {
                if (map.get(type).equals(property.getType())) {
                    jComboBox_Type.setSelectedItem(type);
                    break;
                }
            }

            jSpinner_Bedrooms.setValue(property.getBedrooms());
            jSpinner_bathrooms.setValue(property.getBathrooms());
            jSpinner_Age.setValue(property.getAge());

            jCheckBox_Balcony.setSelected(property.isBalcone());
            jCheckBox_Backyard.setSelected(property.isBackyard());
            jCheckBox_Pool.setSelected(property.isPool());
            jCheckBox_Garage.setSelected(property.isGarage());
        } else {
            JOptionPane.showMessageDialog(null, "Property not found", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(null, "Enter a valid property ID", "Invalid ID", JOptionPane.ERROR_MESSAGE);
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(null, "An error occurred: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace(); // Print stack trace for debugging
    }
        
    }//GEN-LAST:event_jButton_Search_PropertyActionPerformed

    private void jComboBox_TypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_TypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_TypeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PROPERTY_WINDOW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PROPERTY_WINDOW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PROPERTY_WINDOW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PROPERTY_WINDOW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new PROPERTY_WINDOW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Add_Property;
    private javax.swing.JButton jButton_Edit_Property;
    private javax.swing.JButton jButton_Remove_Property;
    private javax.swing.JButton jButton_Search_Property;
    private javax.swing.JCheckBox jCheckBox_Backyard;
    private javax.swing.JCheckBox jCheckBox_Balcony;
    private javax.swing.JCheckBox jCheckBox_Garage;
    private javax.swing.JCheckBox jCheckBox_Pool;
    private javax.swing.JComboBox<String> jComboBox_Type;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner_Age;
    private javax.swing.JSpinner jSpinner_Bedrooms;
    private javax.swing.JSpinner jSpinner_bathrooms;
    private javax.swing.JTextArea jTextArea_Adresse;
    private javax.swing.JTextArea jTextArea_Description;
    private javax.swing.JTextField jTextField_Id;
    private javax.swing.JTextField jTextField_OwnerId;
    private javax.swing.JTextField jTextField_Price;
    private javax.swing.JTextField jTextField_SquareFeet;
    // End of variables declaration//GEN-END:variables

   
       

}
